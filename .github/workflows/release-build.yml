name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: |
          mkdir -p release
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags "-s -w" -o release/voice-keyboard-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: voice-keyboard-${{ matrix.goos }}-${{ matrix.goarch }}
          path: release/voice-keyboard-${{ matrix.goos }}-${{ matrix.goarch }}

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: release/*
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Automated build artifacts for ${{ github.ref_name }}
